import telebot
import shelve
import datetime
from collections import defaultdict
from threading import Timer
'''–¢–æ–∫–µ–Ω'''
bot = telebot.TeleBot('931797065:AAE0aqI1Wpb4Zy6WqQfrQrU31XnUc_HJ84I')
ADD, NAME, DATE, CONFIRMATION, DELETE_USER = range(5)
BIRTHDAY_DATA = dict()

'''–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º'''
@bot.message_handler(commands=['start']) #–î–µ–∫–æ—Ä–∞—Ç–æ—Ä
def message_start(message): #–†–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è,\
    –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /add –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –ª—é–¥–µ–π –∏–ª–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è.\n \n \n \
    ‚ú®‚ú®‚ú®POWERED BY @Alexey_Horbunov‚ú®‚ú®‚ú®')
'''–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'''
@bot.message_handler(commands=['help'])
def help_function(message):
    bot.send_message(message.chat.id, \
    'üöÄ –≠—Ç–æ –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –ª—é–¥—è–º –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è —Å–≤–æ–∏—Ö –∫–æ–ª–ª–µ–≥/–æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–æ–≤, –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤ –∏ —Ç.–¥.'\
    '–≤ —á–∞—Ç–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è. –î–ª—è –Ω–∞—á–∞–ª–∞ –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –¥–æ–ª–∂–µ–Ω –≤–Ω–µ—Å—Ç–∏ –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add-'\
    ' –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é, –∞ –ø–æ—Ç–æ–º –¥–∞—Ç—É. –ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –≥—Ä—É–ø–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–± –∏–º–µ–Ω–Ω–∏–Ω–Ω–∏–∫–∞—Ö.' \
    ' –¢–∞–∫–∂–µ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è delete, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª–∏—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /delete.'\
    ' –í–º–µ—Å—Ç–µ —Å —ç—Ç–∏–º –º–æ–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /see\n'\
    '‚ú®–í —Å–ª—É—á–∞–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞–∫–∏—Ö-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ê–ª–µ–∫—Å–µ—é @Alexey_Horbunov ‚ú®')

'''—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏'''
@bot.message_handler(commands=['delete'])
def message_delete_user1(message):
    bot.send_message(message.chat.id, text = '‚è©–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–º–µ—Å—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.' \
    ' –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—á–∏—Å–ª–æ-–º–µ—Å—è—Ü".'\
    '–ù–∞–ø—Ä–∏–º–µ—Ä, —É —á–µ–ª–æ–≤–µ–∫–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è 8 –∏—é–Ω—è, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "08-06"')
    update_state(message, DELETE_USER)

'''–ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ–π –±–∞–∑—ã'''
@bot.message_handler(commands=['see'])
def message_see(message):
    bot.send_message(message.chat.id, text = format(BIRTHDAY_DATA))


@bot.message_handler(func = lambda message: get_state(message) == DELETE_USER)
def message_delete_user2(message):
    update_object(message.chat.id, 'date', message.text)
    object = get_object(message.chat.id)
    for key in object:
        if object[key] in BIRTHDAY_DATA:
            del BIRTHDAY_DATA[object[key]]
            bot.send_message(message.chat.id, text = '‚úî–£–¥–∞–ª–µ–Ω–æ')
        else:
            bot.send_message(message.chat.id, text = '‚ùå–î–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π —É –ª—é–¥–µ–π —Å —Ç–∞–∫–æ–π –¥–∞—Ç–æ–π –Ω–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–∞—á–∞–ª–∞: /delete')
        update_state(message, ADD)

'''–ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è'''
@bot.message_handler(func = lambda message: get_state(message) == ADD)
def handle_message(message):
    bot.send_message(message.chat.id, text = '‚è©–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é')
    update_state(message, NAME)

@bot.message_handler(func = lambda message: get_state(message) == NAME)
def handle_name(message):
    update_object(message.chat.id, 'name', message.text)
    bot.send_message(message.chat.id, text = '‚è©–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—á–∏—Å–ª–æ-–º–µ—Å—è—Ü".\
    –ù–∞–ø—Ä–∏–º–µ—Ä, —É —á–µ–ª–æ–≤–µ–∫–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è 8 –∏—é–Ω—è, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "08-06"')
    update_state(message, DATE)

@bot.message_handler(func = lambda message: get_state(message) == DATE)
def handle_date(message):
    update_object(message.chat.id, 'date', message.text)
    object = get_object(message.chat.id)
    bot.send_message(message.chat.id, text='–í—Å–µ –≤–µ—Ä–Ω–æ? {}'.format(object))
    update_state(message, CONFIRMATION)

@bot.message_handler(func = lambda message: get_state(message) == CONFIRMATION)
def handle_date(message):
    if '–¥–∞' in message.text.lower():
        object = get_object(message.chat.id)
        help_list = [object]
        for i in help_list:
            if i['date'] not in BIRTHDAY_DATA:
                BIRTHDAY_DATA[i['date']] = [i['name']]
            else:
                BIRTHDAY_DATA[i['date']].append(i['name'])
        bot.send_message(message.chat.id, text='‚úÖ–ó–∞–ø–∏—Å–∞–Ω–æ‚úÖ'.format(object))
        update_state(message, ADD)
    if '–Ω–µ—Ç' in message.text.lower():
        bot.send_message(message.chat.id, text='‚ùå–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –Ω–∞–∂–º–∏—Ç–µ /add')
        update_state(message, ADD)
    object.clear()
    '''–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ'''
    def timed_job():
        Timer(1800, timed_job).start()
        for key in BIRTHDAY_DATA.keys():
            if key == datetime.datetime.now().strftime('%d-%m'):
                for data in BIRTHDAY_DATA[key]:
                    bot.send_message(message.chat.id, text = data + ' —Å–µ–≥–æ–¥–Ω—è –∏–º–µ–Ω–Ω–∏–Ω–Ω–∏–∫(—Ü–∞), –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º))))')
    timed_job()



''''—Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞'''
USER_STATE = defaultdict(lambda: ADD)


def get_state(message):
    return USER_STATE[message.chat.id]


def update_state(message, state):
    USER_STATE[message.chat.id] = state

'''—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'''
ALLDATA = defaultdict(lambda: {})

def update_object(user_id, key, value):
    ALLDATA[user_id][key] = value

def get_object(user_id):
    return ALLDATA[user_id]



bot.polling() #–ß—Ç–æ–±—ã –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª—Å—è –∏ –ø—Ä–æ–≤–µ—Ä—è–ª —Å–æ–æ–±—â–µ–Ω–∏—è
